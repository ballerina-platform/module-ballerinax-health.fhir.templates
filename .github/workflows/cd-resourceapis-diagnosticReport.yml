name: CD - resourceapis Diagnostic Report

on:
  workflow_dispatch:
    inputs:
      bal_central_environment:
        description: Ballerina Central Environment
        type: choice
        options:
        - STAGE
        - DEV
        - PROD
        required: true

jobs:
  release:
    runs-on: ubuntu-latest
    env:
      JAVA_OPTS: -Xmx4G
    steps:
      - uses: actions/checkout@v3

      - name: Ballerina Build Diagnostic Report
        uses: ballerina-platform/ballerina-action@2201.7.0
        with:
          args:
            pack
        env:
          WORKING_DIR: ./r4/resource-apis/diagnosticReport
          JAVA_HOME: /usr/lib/jvm/default-jvm

      - name: Push to Staging Diagnostic Report
        if: github.event.inputs.bal_central_environment == 'STAGE'
        uses: ballerina-platform/ballerina-action@2201.7.0
        with:
          args:
            push
        env:
          WORKING_DIR: ./r4/resource-apis/diagnosticReport
          JAVA_HOME: /usr/lib/jvm/default-jvm
          BALLERINA_STAGE_CENTRAL: true
          BALLERINA_CENTRAL_ACCESS_TOKEN: ${{ secrets.BALLERINA_CENTRAL_STAGE_ACCESS_TOKEN }}

      - name: Push to Dev Diagnostic Report
        if: github.event.inputs.bal_central_environment == 'DEV'
        uses: ballerina-platform/ballerina-action@2201.7.0
        with:
          args:
            push
        env:
          WORKING_DIR: ./r4/resource-apis/diagnosticReport
          JAVA_HOME: /usr/lib/jvm/default-jvm
          BALLERINA_DEV_CENTRAL: true
          BALLERINA_CENTRAL_ACCESS_TOKEN: ${{ secrets.BALLERINA_CENTRAL_DEV_ACCESS_TOKEN }}      

      - name: Push to Prod Diagnostic Report
        if: github.event.inputs.bal_central_environment == 'PROD'
        uses: ballerina-platform/ballerina-action@2201.7.0
        with:
          args:
            push
        env:
          WORKING_DIR: ./r4/resource-apis/diagnosticReport
          JAVA_HOME: /usr/lib/jvm/default-jvm
          BALLERINA_CENTRAL_ACCESS_TOKEN: ${{ secrets.BALLERINA_CENTRAL_ACCESS_TOKEN }}

      - name: Publish Release
        if: github.event.inputs.bal_central_environment == 'PROD'
        id: publish_release
        run: |
          # Get Branch Name
          BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/})
          echo "BRANCH_NAME=${BRANCH_NAME}" >> $GITHUB_OUTPUT
          # Release name
          RELEASE_NAME=${BRANCH_NAME#release-}
          curl \
            -s -X POST \
            -H "Authorization: Bearer ${{ secrets.BALLERINA_BOT_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            -d '{
              "tag_name": "'$RELEASE_NAME'",
              "name": "'$RELEASE_NAME'",
              "body": "[Automated] Creating tag:  '$RELEASE_NAME'.",
              "draft": false,
              "prerelease": false,
              "target_commitish": "'$BRANCH_NAME'"
            }' \
            "https://api.github.com/repos/${{ github.repository }}/releases"

      - name: Update version in Ballerina.toml
        if: ${{ github.event.inputs.bal_central_environment == 'PROD' }}
        id: increment_patch_version
        run: |
          CURRENT_VERSION=$(grep -Po -m 1 '(?<=version = ")[\d.]+' ./r4/resource-apis/diagnosticReport/Ballerina.toml)
          IFS='.' read -ra VERSION_PARTS <<< "$CURRENT_VERSION"
          PATCH_VERSION=$((VERSION_PARTS[2] + 1))
          NEW_VERSION="${VERSION_PARTS[0]}.${VERSION_PARTS[1]}.$PATCH_VERSION"
          sed -i "0,/version = \"${CURRENT_VERSION}\"/s//version = \"${NEW_VERSION}\"/" ./r4/resource-apis/diagnosticReport/Ballerina.toml
          echo "NEW_VERSION=${NEW_VERSION}" >> $GITHUB_OUTPUT
          echo "CURRENT_VERSION=${CURRENT_VERSION}" >> $GITHUB_OUTPUT

      - name: Ballerina Build after incrementing version
        if: ${{ github.event.inputs.bal_central_environment == 'PROD' }}
        uses: ballerina-platform/ballerina-action@2201.7.0
        with:
          args:
            pack
        env:
          WORKING_DIR: ./r4/resource-apis/diagnosticReport
          JAVA_HOME: /usr/lib/jvm/default-jvm

      - name: Commit changes and make a PR
        if: ${{ github.event.inputs.bal_central_environment == 'PROD' }}
        run: |
          # Commit changes
          git config --global user.name ${{ secrets.BALLERINA_BOT_USERNAME }}
          git config --global user.email ${{ secrets.BALLERINA_BOT_EMAIL }}
          git add ./r4/resource-apis/diagnosticReport/Ballerina.toml
          git add ./r4/resource-apis/diagnosticReport/Dependencies.toml
          git commit -m "[Release resourceapis diagnostic report ${{ steps.increment_patch_version.outputs.CURRENT_VERSION }}] Prepare for next dev cycle"
          git push origin ${{ steps.publish_release.outputs.BRANCH_NAME }}
          
          # Set the base and head branches
          BASE_BRANCH="main"
          HEAD_BRANCH="${{ steps.publish_release.outputs.BRANCH_NAME }}"
          # Create the pull request using the GitHub REST API
          RESPONSE=$(curl -s -X POST \
            -H "Authorization: Bearer ${{ secrets.BALLERINA_BOT_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            -d '{
              "title": "[Release resourceapis diagnostic report ${{ steps.increment_patch_version.outputs.CURRENT_VERSION }}] Prepare for next dev cycle",
              "body": "",
              "head": "'"$HEAD_BRANCH"'",
              "base": "'"$BASE_BRANCH"'"
            }' \
            "https://api.github.com/repos/${{ github.repository }}/pulls")
          # Extract the pull request URL from the response
          PR_URL=$(echo "$RESPONSE" | jq -r '.html_url')

          echo "Pull Request created: $PR_URL"
